@page "/setscore/{gameresult}"
@using Models
@using Services
@using System.Text.Json;
@inject IRefreshService refreshService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager


@for (int i = 0; i <= gameResult!.MaxScore; i++)
{
	int tmp = i;
	<button type="button" @onclick="() => UpdatePlayerScore(tmp)" class="btn btn-primary popup-score-btn" data-toggle="modal" data-target="#setScoreModal">
		@i
	</button>
}

@code {
	[Parameter]
	public GameResult? gameResult { get; set; }

	[CascadingParameter] BlazoredModalInstance? BlazoredModal { get; set; }


	protected override void OnParametersSet()
	{
		if (gameResult != null)
		{

		}

	}

	public void UpdatePlayerScore(int score)
	{
		if(CanSetPoints(score) is false)
		{
			throw new Exception("Failed to set score from SetScore modal");
		}
		gameResult!.ActivePlayer.Points = score;
		gameResult.Opponent.Points = gameResult.MaxScore - score;
		refreshService.CallRequestRefresh();
		if (BlazoredModal != null)
			BlazoredModal.CloseAsync();
	}

	public bool CanSetPoints(int score)
	{
		if (gameResult == null)
			return false;
		if (gameResult.ActivePlayer == null || gameResult.Opponent == null)
			return false;
		if (gameResult.MaxScore <= 0 || gameResult.MaxScore < score)
			return false;

		return true;
	}

	async Task Close() => await BlazoredModal.CloseAsync(ModalResult.Ok(true));

}